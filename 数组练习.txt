1.#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
#include<stdlib.h>
void adjust(int arr[], int len)
{
	int left = 0;
	int right = len - 1;
	int temp = 0;
	while (left < right)
	{
		while (left<right&&arr[left] % 2 == 1)
		{
			left++;
		}
		while (left<right&&arr[right] % 2 == 0)
		{
			right--;
		}
		if (left < right)
		{
			temp = arr[left];
			arr[left] = arr[right];
			arr[right] = temp;
		}	
	}
}
int main()
{
	int arr[] = { 1,2,3,4,5,6,7,8,9,0 };
	int len = sizeof(arr) / sizeof(arr[0]);
	adjust(arr, len);
	for (int i = 0; i < len; i++)
	{
		printf("%d ", arr[i]);
	}
	system("pause");
	return 0;
}
2.#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include<windows.h>
#define ROW 4
#define COL 4
int Yang(int arr[ROW][COL], int val)
{
	int i = 0;
	int j = COL - 1;
	int tmp = arr[i][j];
	while (1)
	{
		if (tmp == val)
		{
			return 1;
		}
		else if (tmp < val && j >= 0)
		{
			tmp = arr[++i][j];
		}
		else if (tmp > val &&j >= 0)
		{
			tmp = arr[i][--j];
		}
		else
		{
			return 0;
		}
	}

}
int main()
{
	int a[ROW][COL] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 };
	int i = 0;
	int j = 0;
	int num;
	printf("数组为:\n");
	for (i = 0; i<ROW; i++)
	{
		for (j = 0; j < COL; j++)
		{
			printf("%5d", a[i][j]);
		}
		printf("\n");
	}
	printf("Please Enter:");
	scanf("%d", &num);
	if (Yang(a, num))
	{
		printf("%d在该数组中\n", num);
	}
	else
	{
		printf("%d不在该数组中\n", num);
	}
	system("pause");
	return 0;
}
3.#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
#include<Assert.h>
#include<windows.h>
void levo(char *pstr, int SZ, int key)
{
	assert(pstr != NULL);
	int i = 0;
	int j = 0;
	for (i = 0; i < key; i++)
	{
		char tmp = pstr[0];
		for (j = 0; j < SZ - 1; j++)
		{
			pstr[j] = pstr[j + 1];
		}
		pstr[SZ - 1] = tmp;
	}
}
int main()
{
	char str[] = "ABCD";
	int key = 0;
	int SZ = sizeof(str) / sizeof(str[0]) - 1;
	printf("请输入你要旋转字符的个数  ");
	scanf("%d", &key);
	levo(str, SZ, key);
	printf("%s\n", str);
	system("pause");
	return 0;
}
4.#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <windows.h>
#include <string.h>
int judge(char str1[], char str2[])
{
	int i = 0;
	int j = 0;
	int lenght = strlen(str1);
	for (j = 1; j <= lenght; j++)
	{
		{
			int tem = str1[0];
			for (i = 0; i < lenght - 1; i++)
			{
				str1[i] = str1[i + 1];
			}
			str1[lenght - 1] = tem;
		}

		if (0 == strcmp(str1, str2))
		{
			return 1;
		}
	}
	return 0;
}

int main()
{
	char s1[10] = "abcd";
	char s2[10] = "ABCD";
	printf("s1 = %s\n", s1);
	printf("s2 = %s\n", s2);
	printf("%d\n", judge(s1, s2));
	system("pause");
	return 0;
}