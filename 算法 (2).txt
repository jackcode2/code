#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include<windows.h>
void fun(int arr[], int n)
{
	int i=0; 
	for (i = n - 1; i >= 0; i--)
	if (arr[i] % 2 == 0)
	{
		break;
	}
	printf("偶数的下标是%d\n", i);
}
void count1(int arr[],int n)
{
	int count=0;
	for (int i = 0; i < n; i++)
	{
		if (arr[i] % 2 == 0)
		{
			count++;
		}
	}
	printf("偶数的个数是%d\n",count );
}
void main()
{
	int  n1;
	int array[] = {1,2,3,4,5,6,7,8 };
	count1(array, sizeof(array) / sizeof(array[0]));
	fun(array, sizeof(array)/sizeof(array[0]));
	system("pause");
	return 0;
}




#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include<windows.h>
void fun(int arr[], int n)
{
	int i = 0;
	for (; i < n; i++)
	{
		if (arr[i]>arr[i + 1])
		{
			printf("你所说的项是%d\n", i+2 );
			break;
		}
	}
}
int main()
{
	int array[] = { 1, 1, 1, 4, 7, 7, 8, 4 };
	fun(array, sizeof(array) / sizeof(array[0]));
	system("pause");
	return 0;
}


#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include<windows.h>
#include <stdio.h>
void itob(int n, char s[], int b);
void output(char s[]);
int main(){
	int n = 100;
	char s[50];
	itob(n, s, 16);
	output(s);
	itob(n, s, 8);
	output(s);
	itob(n, s, 4);
	output(s);
	itob(n, s, 2);
	output(s);
	system("pause");
	return 0;
}
void itob(int n, char s[], int b){
	int i = 0;
	while (n != 0){
		s[i++] = n%b + '0';
		n /= b;
	}
	s[i--] = '\0';
	for (int j = 0; j<i; ++j, --i){
		char temp = s[j];
		s[j] = s[i];
		s[i] = temp;
	}
}
void output(char s[]){
	for (int i = 0; s[i] != '\0'; ++i){
		printf("%c", s[i]);
	}
	printf("\n");
}


#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include<windows.h>
int fun(int n)
{
	if (n == 0)
	{
		return 1;
	}
	if (n == 1)
	{
		return 3;
	}
	if (n == 2)
	{
		return 4;
	}
	else{
		return (fun(n - 1) + 2) * 2 + fun(n - 2) + fun(n - 3);
	}
}
int main()
{
	int result = fun(4);
	printf("%d\n", result);
	system("pause");
	return 0;
}


#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include<windows.h>
int fun(int a, int b,int y)
{
	int count = 0;
	int m = a + b;
	while (y >= m)
	{
		y = y / m;
		count = count + 1;
	}
	return count;
}
int main()
{
	int result = fun(1, 2, 81);
	printf("%d", result);
	system("pause");
	return 0;
}

